command function
(function)

command call

// push return-address
@return-address
D=A  // stores address in D
@SP
A=M
M=D  // sets ram[SP VALUE] to address
@SP
M=M+1  // increses SP value by one

// push LCL
@LCL
D=M  // stores address in D
@SP
A=M
M=D  // sets ram[SP VALUE] to address
@SP
M=M+1  // increses SP value by one

// push ARG
@ARG
D=M  // stores address in D
@SP
A=M
M=D  // sets ram[SP VALUE] to address
@SP
M=M+1  // increses SP value by one

// push THIS
@THIS
D=M  // stores address in D
@SP
A=M
M=D  // sets ram[SP VALUE] to address
@SP
M=M+1  // increses SP value by one

// push THAT
@THAT
D=M  // stores address in D
@SP
A=M
M=D  // sets ram[SP VALUE] to address
@SP
M=M+1  // increses SP value by one

// ARG=SP-n-5
@diff
D=A
@SP
D=M-D
@ARG
M=D

// LCL=SP
@SP
D=M
@LCL
M=D

// goto f
@function
0;JMP

// final return
(return-address)

command return

// FRAME = LCL
@LCL
D=M
@R13
M=D

// RET = *(FRAME-5)  // saves return address to a temp var.

// *ARG = pop()  // sets the topmost value in the stack to the start of the argument segment

// SP = ARG + 1

// RESTORING POINTERS 

// goto RET

